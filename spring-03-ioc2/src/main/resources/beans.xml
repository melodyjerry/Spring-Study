<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--第1种方式：下标赋值-->
    <!--<bean id="user" class="com.melodyhub.pojo.User">
        &lt;!&ndash;<property name="name" value="下标赋值：MelodyJerry"/>&ndash;&gt;
        <constructor-arg index="0" value="MeloduHub-MelodyJerry"/>
    </bean>-->

    <!--第2种方式：类型赋值-->
    <!--<bean id="user" class="com.melodyhub.pojo.User">
        <constructor-arg type="java.lang.String" value="类型赋值：MeloduHub-MelodyJerry"/>
    </bean>-->

    <!--第3种方式：直接通过属性值实现赋值-->
    <bean id="user" class="com.melodyhub.pojo.User">
        <constructor-arg name="nmae" value="直接通过属性值实现赋值：MeloduHub-MelodyJerry"/>
    </bean>

    <!--Spring创建Bean的时候就实例化对象-->
    <!--<bean id="userTwo" class="com.melodyhub.pojo.UserTwo"></bean>-->

    <!--alias:别名.如果增加了别名,我们也可以通过别名获取到这个对象-->
    <alias name="user" alias="woshibieming"/>

    <!--
    id：bean的唯一标识符，也就是相当于我们学的对象名
    class：bean对象所对应的全限定名：包名+类名
    name: 也是别名，而且name可以同时取多个别名(分隔符：逗号、空格、分号)
    -->
    <bean id="userTwo" class="com.melodyhub.pojo.UserTwo" name="two u2,u3;u4">
        <property name="name" value="测试bean标签的配置，并同时设置多个别名：two、u2、u3、u4"/>
    </bean>

</beans>